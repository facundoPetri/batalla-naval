{"version":3,"sources":["components/Header.jsx","components/Cell.jsx","components/Board.jsx","factories/Ship.js","factories/Gameboard.js","factories/Player.js","components/StartGame.jsx","components/GameFinished.jsx","components/GameWindow.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["Header","className","Cell","name","switchPlayer","currentPlayer","hasShip","gameBoard","coords","x","y","useState","class1","setclass1","shotDisplay","setshotDisplay","board","isShot","currentCell","setcurrentCell","useEffect","onClick","receiveAttack","Board","player","i","drawBoard","map","row","item","style","pointerEvents","backgroundColor","Ship","length","this","ship","Array","fill","index","every","curr","Gameboard","size","fleet","coord","j","JSON","stringify","hit","shipLength","Math","random","floor","push","forEach","shipInfo","isSunk","setRandomCoords","some","checkCollisionsWithShips","placeShip","Player","type","init","playerBoard","autoplay","StartGame","handleChange","handleClick","htmlFor","id","placeholder","value","onChange","e","GameFinished","winner","window","location","reload","GameWindow","newGame","setNewGame","player1","setPlayer1","player2","setPlayer2","gameWon","setgameWon","setCurrentPlayer","setName","timer1","setTimeout","clearTimeout","isFirstRun","useRef","current","areAllShipsSunk","event","target","preventDefault","Footer","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5669a383.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Batalla Naval</h1>\n    </div>\n  )\n}\n\nexport default Header\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\n\nconst Cell = ({\n  name,\n  currentPlayer,\n  switchPlayer,\n  hasShip,\n  gameBoard,\n  coords,\n}) => {\n  // array destruct las coords\n  let [x, y] = coords;\n\n  const [class1, setclass1] = useState(\n    hasShip && name !== \"cpu\" ? \"cell has-ship\" : `cell ${name}`\n  );\n  const [shotDisplay, setshotDisplay] = useState(null);\n  const [currentCell, setcurrentCell] = useState(gameBoard.board[y][x].isShot);\n\n  const handleClick = () => {\n    // llamar a la funcion para recibir el ataque y cambiar el gameboard\n    if (gameBoard.receiveAttack([x, y]) === false) {\n      return;\n    } else {\n      gameBoard.receiveAttack([x, y]);\n    }\n    // cambiar de turno\n    switchPlayer();\n  };\n\n  useEffect(() => {\n    // usando los datos cambiados del gameboard pintar en el DOM segun corresponda\n    if (currentCell) {\n      setclass1(class1 + \" is-shot\");\n      if (hasShip) {\n        setshotDisplay(\"x\");\n      }\n    }\n  }, [currentCell, hasShip]);\n\n  useEffect(() => {\n    setcurrentCell(gameBoard.board[y][x].isShot);\n  });\n\n  return (\n    <div onClick={handleClick} className={class1}>\n      {shotDisplay}\n    </div>\n  );\n};\n\nexport default Cell;\n","import Cell from \"./Cell\";\n\nconst Board = ({ gameBoard, currentPlayer, switchPlayer, player }) => {\n  let i = 0;\n  const drawBoard = gameBoard.board.map((row, y) =>\n    row.map((item, x) => {\n      i++;\n      return (\n        <Cell\n          name={player}\n          currentPlayer={currentPlayer}\n          switchPlayer={switchPlayer}\n          hasShip={item.hasShip}\n          gameBoard={gameBoard}\n          coords={[x, y]}\n          key={i}\n        />\n      );\n    })\n  );\n\n  // anular eventos al que no le toca el turno\n  const style = {\n    pointerEvents: \"none\",\n    backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n  };\n  return (\n    <div>\n      <p className=\"name\">{player}</p>\n      <div className=\"board\" style={currentPlayer === player ? style : null}>\n        {drawBoard}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","class Ship {\n  constructor(length) {\n    this.ship = Array(length).fill(\"o\");\n    this.length = length;\n  }\n  hit(index) {\n    this.ship[index] = \"i\";\n  }\n  isSunk() {\n    return this.ship.every((curr) => curr === \"i\");\n  }\n}\n\nexport default Ship","import Ship from \"./Ship\";\n\nclass Gameboard {\n  constructor(size = 10) {\n    this.board = Array(size)\n      .fill({ hasShip: false, isShot: false })\n      .map((x) => Array(size).fill({ hasShip: false, isShot: false }));\n    this.fleet = [\n      { ship: new Ship(1), coords: [] },\n      { ship: new Ship(1), coords: [] },\n      { ship: new Ship(2), coords: [] },\n      { ship: new Ship(2), coords: [] },\n      { ship: new Ship(3), coords: [] },\n      { ship: new Ship(3), coords: [] },\n      { ship: new Ship(4), coords: [] },\n    ];\n  }\n\n  receiveAttack(coord) {\n    let [x, y] = coord;\n    if (this.board[y][x].isShot) return false;\n    this.board[y][x] = { ...this.board[y][x], isShot: true };\n    if (this.board[y][x].hasShip) {\n      for (let i = 0; i < this.fleet.length; i++) {\n        for (let j = 0; j < this.fleet[i].coords.length; j++) {\n          if (\n            JSON.stringify(this.fleet[i].coords[j]) === JSON.stringify(coord)\n          ) {\n            this.fleet[i].ship.hit(j);\n          }\n        }\n      }\n    }\n  }\n\n  // tomar un punto en el mapa y verificar si tiene una ship\n  checkCollisionsWithShips(coord) {\n    let [x, y] = coord;\n    return this.board[y][x].hasShip;\n  }\n\n  // tomar la longitud del ship y devolver un array con las\n  // coordenadas contiguas dependiendo de la long, de los bordes y el orden\n  setRandomCoords(shipLength) {\n    let order = Math.random() < 0.5 ? \"vertical\" : \"horizontal\";\n\n    let coords = [];\n\n    if (order === \"horizontal\") {\n      let x = Math.floor(Math.random() * (11 - shipLength));\n      let y = Math.floor(Math.random() * 10);\n\n      for (let i = 0; i < shipLength; i++) {\n        coords.push([x + i, y]);\n      }\n    } else {\n      let x = Math.floor(Math.random() * 10);\n      let y = Math.floor(Math.random() * (11 - shipLength));\n\n      for (let i = 0; i < shipLength; i++) {\n        coords.push([x, y + i]);\n      }\n    }\n    return coords;\n  }\n\n  placeShip(coords) {\n    coords.forEach((coord) => {\n      let [x, y] = coord;\n      this.board[y][x] = { hasShip: true, isShot: false };\n    });\n  }\n\n  areAllShipsSunk() {\n    return this.fleet.every((shipInfo) => shipInfo.ship.isSunk());\n  }\n\n  init() {\n    this.fleet.forEach((shipInfo) => {\n      // seguir pidiendo coords hasta que no coicidan en el mapa con otra ship\n      do {\n        shipInfo.coords = this.setRandomCoords(shipInfo.ship.length);\n      } while (\n        shipInfo.coords.some((coord) => this.checkCollisionsWithShips(coord))\n      );\n\n      this.placeShip(shipInfo.coords);\n    });\n  }\n}\n\nexport default Gameboard;\n","import Gameboard from \"./Gameboard\";\n\nclass Player {\n  constructor(name, type = \"human\") {\n    this.name = name;\n    this.type = type;\n    this.gameBoard = new Gameboard();\n    this.gameBoard.init();\n  }\n\n  autoplay(playerBoard) {\n    let x = Math.floor(Math.random() * 10);\n    let y = Math.floor(Math.random() * 10);\n    if (playerBoard.board[y][x].isShot === true) {\n      this.autoplay(playerBoard);\n    } else {\n      playerBoard.receiveAttack([x, y]);\n    }\n  }\n}\n\nexport default Player;\n","const StartGame = ({ name, handleChange, handleClick }) => {\n  return (\n    <form>\n      <label htmlFor=\"name\">Ingresa tu nombre:</label>\n      <input\n        id=\"name\"\n        type=\"text\"\n        placeholder=\"Nombre\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button onClick={(e) => handleClick(e)}>Comenzar</button>\n    </form>\n  );\n};\n\nexport default StartGame;\n","const GameFinished = ({ winner }) => {\n  return (\n    <div>\n      <p className=\"winner-text\">\n        El ganador es: <span>{winner}</span>\n      </p>\n      <button onClick={() => window.location.reload()}>Volver a jugar</button>\n    </div>\n  );\n};\n\nexport default GameFinished;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect, useRef } from \"react\";\nimport Board from \"./Board\";\nimport Player from \"../factories/Player\";\nimport StartGame from \"./StartGame\";\nimport GameFinished from \"./GameFinished\";\n\nconst GameWindow = () => {\n  const [newGame, setNewGame] = useState(false);\n  const [player1, setPlayer1] = useState(null);\n  const [player2, setPlayer2] = useState(null);\n  const [gameWon, setgameWon] = useState(false);\n\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const switchPlayer = () => {\n    setCurrentPlayer(currentPlayer === player1.name ? \"cpu\" : player1.name);\n  };\n\n  const [name, setName] = useState(\"\");\n  const handleChange = (event) => {\n    const { value } = event.target;\n    setName(value);\n  };\n\n  useEffect(() => {\n    if (player1) {\n      setCurrentPlayer(player1.name);\n    }\n  }, [player1]);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (name === \"\") return;\n    setPlayer1(new Player(name));\n    setPlayer2(new Player(\"cpu\", \"cpu\"));\n    setNewGame(true);\n  };\n\n  // jugada de la maquina y cambiar de turno\n  const cpuPlay = () => {\n    player2.autoplay(player1.gameBoard);\n    switchPlayer();\n  };\n  useEffect(() => {\n    let timer1 = setTimeout(() => {\n      if (currentPlayer === \"cpu\") {\n        cpuPlay();\n      }\n    }, 500);\n    return () => clearTimeout(timer1);\n  }, [currentPlayer]);\n\n  // usar useRef para saltear el primer useeffect\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    // preguntar a que gameboard se le hundieron los barcos\n    // y el que de true es que gano el OPONENTE\n    if (player1.gameBoard.areAllShipsSunk()) {\n      setgameWon(\"cpu\");\n    }\n    if (player2.gameBoard.areAllShipsSunk()) {\n      setgameWon(name);\n    }\n  }, [currentPlayer]);\n  return (\n    <div>\n      {gameWon && <GameFinished winner={gameWon} />}\n      {!gameWon && !newGame && (\n        <StartGame\n          name={name}\n          handleChange={handleChange}\n          handleClick={handleClick}\n        />\n      )}\n      {!gameWon && newGame && (\n        <>\n          <span className=\"turn\">Turno de {currentPlayer}</span>\n          <div className=\"game\">\n            <Board\n              gameBoard={player1.gameBoard}\n              currentPlayer={currentPlayer}\n              switchPlayer={switchPlayer}\n              player={player1.name}\n            />\n            <Board\n              gameBoard={player2.gameBoard}\n              currentPlayer={currentPlayer}\n              switchPlayer={switchPlayer}\n              player={player2.name}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GameWindow;\n","const Footer = () => {\n  return (\n    <div className=\"footer\">\n      Creado por Facundo Petri como parte de{\" \"}\n      <a href=\"https://www.theodinproject.com\">The Odin Project</a> Javascript\n      curriculum track.\n    </div>\n  );\n};\n\nexport default Footer;\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport GameWindow from \"./components/GameWindow\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <GameWindow />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}